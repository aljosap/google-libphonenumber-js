name: Build and Publish libphonenumber

permissions:
  contents: write

on:
  workflow_dispatch:
  schedule:
    - cron: '0 3 * * *'

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git unzip

      - name: Get latest libphonenumber release
        id: get_release
        run: |
          latest=$(curl -s https://api.github.com/repos/google/libphonenumber/releases/latest | jq -r .tag_name)
          echo "latest_tag=$latest" >> $GITHUB_OUTPUT

      - name: Download and verify Closure Compiler
        run: |
          CLOSURE_VERSION="v20250402"
          CLOSURE_URL="https://repo1.maven.org/maven2/com/google/javascript/closure-compiler/${CLOSURE_VERSION}/closure-compiler-${CLOSURE_VERSION}.jar"
          
          echo "Downloading Closure Compiler from ${CLOSURE_URL}"
          
          # Create a temporary directory for downloads
          mkdir -p tmp
          cd tmp
          
          # Download with curl and follow redirects
          if ! curl -L -o closure-compiler.jar "${CLOSURE_URL}"; then
            echo "Failed to download Closure Compiler"
            exit 1
          fi
          
          # Robust JAR check
          if ! unzip -tq closure-compiler.jar > /dev/null; then
            echo "Downloaded file is not a valid JAR file"
            exit 1
          fi
          
          # Move to parent directory if verification passed
          mv closure-compiler.jar ../
          cd ..
          rm -rf tmp
          
          # Final verification
          if ! java -jar closure-compiler.jar --version; then
            echo "Closure Compiler verification failed"
            exit 1
          fi
          
          echo "Closure Compiler downloaded and verified successfully"

      - name: Clone libphonenumber and closure-library
        run: |
          git clone --depth 1 --branch ${{ steps.get_release.outputs.latest_tag }} https://github.com/google/libphonenumber.git
          git clone --depth 1 https://github.com/google/closure-library.git

      - name: Create build directories
        run: |
          mkdir -p dist
          mkdir -p package/dist

      - name: Run Closure Compiler
        run: |
          # List all required source files explicitly
          SOURCES=(
            "$(pwd)/libphonenumber/javascript/i18n/phonenumbers/phonenumberutil.js"
            "$(pwd)/libphonenumber/javascript/i18n/phonenumbers/metadata.js"
            "$(pwd)/libphonenumber/javascript/i18n/phonenumbers/phonenumber.pb.js"
            "$(pwd)/libphonenumber/javascript/i18n/phonenumbers/asyoutypeformatter.js"
            "$(pwd)/libphonenumber/javascript/i18n/phonenumbers/phonemetadata.pb.js"
          )
          
          # Convert array to space-separated string with --js prefix
          JS_FILES=$(printf -- '--js=%s ' "${SOURCES[@]}")
          
          # Define compilation flags in dependency order
          CLOSURE_FLAGS=(
            "--js_output_file=dist/libphonenumber.js"
            "--compilation_level=ADVANCED"
            "--language_in=ECMASCRIPT_2020"
            "--language_out=ECMASCRIPT_2015"
            "--entry_point=i18n.phonenumbers.PhoneNumberUtil"
            "--dependency_mode=PRUNE"
            "--generate_exports"
            "--process_common_js_modules"
            "--warning_level=QUIET"
            # Base definitions first
            "--define=goog.DEBUG=false"
            "--define=goog.FEATURESET_YEAR=2012"
            "--define=goog.TRUSTED_SITE=false"
            "--define=goog.TRUSTED_TYPES_POLICY_NAME=''"
            "--define=goog.STRICT_MODE_COMPATIBLE=true"
            "--define=goog.ENABLE_DEBUG_LOADER=false"
            # Dependent definitions
            "--define=goog.NATIVE_ARRAY_PROTOTYPES=false"
            "--define=goog.array.ASSUME_NATIVE_FUNCTIONS=false"
            "--define=goog.asserts.ENABLE_ASSERTS=false"
            "--define=goog.html.SafeHtml.ENABLE_ERROR_MESSAGES=false"
            "--define=goog.html.trustedtypes.POLICY_NAME=''"
            # Additional safety definitions
            "--define=goog.dom.ASSUME_STANDARDS_MODE=true"
            "--define=goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING=false"
            "--output_wrapper=(function(){%output%}).call(this);"
          )
          
          # Run Closure Compiler with all flags
          java -jar closure-compiler.jar \
            ${JS_FILES} \
            --js="$(pwd)/closure-library/closure/goog/**/*.js" \
            "${CLOSURE_FLAGS[@]}"

      - name: Add Node.js export
        run: |
          echo "module.exports = i18n.phonenumbers;" >> dist/libphonenumber.js

      - name: Determine package version
        id: versioning
        run: |
          # Remove leading 'v' from tag
          UPSTREAM_VERSION=$(echo "${{ steps.get_release.outputs.latest_tag }}" | sed 's/^v//')
          # Optionally, add a custom suffix (e.g., -custom.1)
          PACKAGE_VERSION="${UPSTREAM_VERSION}-custom.1"
          echo "PACKAGE_VERSION=$PACKAGE_VERSION" >> $GITHUB_ENV
          echo "PACKAGE_VERSION=$PACKAGE_VERSION" >> $GITHUB_OUTPUT

      - name: Prepare npm package
        run: |
          cp dist/libphonenumber.js package/dist/
          # Optionally copy typings and metadata if you have them
          # cp path/to/index.d.ts package/
          # cp path/to/metadata.js package/
          cat > package/package.json <<EOF
          {
            "name": "@your-scope/libphonenumber-js",
            "version": "${PACKAGE_VERSION}",
            "description": "Node.js build of Google's libphonenumber library (Closure Compiler official build)",
            "main": "dist/libphonenumber.js",
            "types": "index.d.ts",
            "files": [
              "dist/",
              "*.d.ts"
            ],
            "repository": {
              "type": "git",
              "url": "https://github.com/your/repo.git"
            },
            "keywords": [
              "libphonenumber",
              "phone",
              "validation",
              "google",
              "typescript"
            ],
            "author": "Your Name <your@email.com>",
            "license": "Apache-2.0"
          }
          EOF

      - name: Publish to npm
        run: |
          cd package
          echo "//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}" > .npmrc
          npm publish --access public
          rm -f .npmrc
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Commit and push changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: update libphonenumber to ${{ steps.get_release.outputs.latest_tag }} (version ${{ env.PACKAGE_VERSION }})"
          branch: main
          file_pattern: 'dist/* package/*'
          push_options: '--force-with-lease'
          commit_user_name: github-actions[bot]
          commit_user_email: github-actions[bot]@users.noreply.github.com
