name: Update libphonenumber JavaScript

permissions:
  contents: write

on:
  workflow_dispatch:
  schedule:
    - cron: '0 3 * * *'

jobs:
  update-libphonenumber:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Get latest libphonenumber release
        id: get_release
        run: |
          latest=$(curl -s https://api.github.com/repos/google/libphonenumber/releases/latest | jq -r .tag_name)
          echo "latest_tag=$latest" >> $GITHUB_OUTPUT

      - name: Read current version
        id: read_version
        run: |
          if [ -f LIBPHONENUMBER_VERSION ]; then
            current=$(cat LIBPHONENUMBER_VERSION)
          else
            current=""
          fi
          echo "current_tag=$current" >> $GITHUB_OUTPUT

      - name: Check if update is needed
        id: check_update
        run: |
          if [ "${{ steps.get_release.outputs.latest_tag }}" = "${{ steps.read_version.outputs.current_tag }}" ]; then
            echo "No update needed."
            echo "update_needed=false" >> $GITHUB_OUTPUT
          else
            echo "Update needed."
            echo "update_needed=true" >> $GITHUB_OUTPUT
          fi

      - name: Exit if no update needed
        if: steps.check_update.outputs.update_needed == 'false'
        run: exit 0

      - name: Clone libphonenumber
        run: |
          git clone --depth 1 --branch ${{ steps.get_release.outputs.latest_tag }} https://github.com/google/libphonenumber.git

      - name: Prepare build workspace and dependencies
        run: |
          mkdir -p build-workspace/src
          cp libphonenumber/javascript/i18n/phonenumbers/*.js build-workspace/src/
          cd build-workspace
          npm init -y
          npm install --save-dev google-closure-compiler@20201102.0.1 google-closure-library@20201006.0.0 browserify@13.1.0 eslint@7.13.0 mocha@8.2.1 should@11.1.0
          
          # Create index.js with proper exports
          cat > src/index.js << 'EOF'
          goog.provide('i18n.phonenumbers');
          
          goog.require('i18n.phonenumbers.PhoneNumberUtil');
          goog.require('i18n.phonenumbers.ShortNumberInfo');
          goog.require('i18n.phonenumbers.AsYouTypeFormatter');
          
          // Export the library
          goog.exportSymbol('libphonenumber', {
            PhoneNumberUtil: i18n.phonenumbers.PhoneNumberUtil,
            ShortNumberInfo: i18n.phonenumbers.ShortNumberInfo,
            AsYouTypeFormatter: i18n.phonenumbers.AsYouTypeFormatter,
            getInstance: function() {
              return i18n.phonenumbers.PhoneNumberUtil.getInstance();
            }
          });
          EOF
          cd ..

      - name: Build with Closure Compiler and Browserify
        run: |
          cd build-workspace
          rm -rf dist && mkdir dist
          
          # First compile with Closure Compiler
          ./node_modules/.bin/google-closure-compiler \
            --compilation_level=SIMPLE \
            --warning_level=QUIET \
            --process_common_js_modules \
            --js=node_modules/google-closure-library/closure/goog/base.js \
            --js=node_modules/google-closure-library/closure/goog/array/array.js \
            --js=node_modules/google-closure-library/closure/goog/asserts/asserts.js \
            --js=node_modules/google-closure-library/closure/goog/asserts/dom.js \
            --js=node_modules/google-closure-library/closure/goog/debug/error.js \
            --js=node_modules/google-closure-library/closure/goog/dom/asserts.js \
            --js=node_modules/google-closure-library/closure/goog/dom/element.js \
            --js=node_modules/google-closure-library/closure/goog/dom/htmlelement.js \
            --js=node_modules/google-closure-library/closure/goog/dom/nodetype.js \
            --js=node_modules/google-closure-library/closure/goog/dom/safe.js \
            --js=node_modules/google-closure-library/closure/goog/dom/tagname.js \
            --js=node_modules/google-closure-library/closure/goog/dom/tags.js \
            --js=node_modules/google-closure-library/closure/goog/fs/blob.js \
            --js=node_modules/google-closure-library/closure/goog/fs/url.js \
            --js=node_modules/google-closure-library/closure/goog/functions/functions.js \
            --js=node_modules/google-closure-library/closure/goog/html/safehtml.js \
            --js=node_modules/google-closure-library/closure/goog/html/safescript.js \
            --js=node_modules/google-closure-library/closure/goog/html/safestyle.js \
            --js=node_modules/google-closure-library/closure/goog/html/safestylesheet.js \
            --js=node_modules/google-closure-library/closure/goog/html/safeurl.js \
            --js=node_modules/google-closure-library/closure/goog/html/trustedresourceurl.js \
            --js=node_modules/google-closure-library/closure/goog/html/trustedtypes.js \
            --js=node_modules/google-closure-library/closure/goog/html/uncheckedconversions.js \
            --js=node_modules/google-closure-library/closure/goog/i18n/bidi.js \
            --js=node_modules/google-closure-library/closure/goog/labs/useragent/browser.js \
            --js=node_modules/google-closure-library/closure/goog/labs/useragent/util.js \
            --js=node_modules/google-closure-library/closure/goog/object/object.js \
            --js=node_modules/google-closure-library/closure/goog/proto2/descriptor.js \
            --js=node_modules/google-closure-library/closure/goog/proto2/fielddescriptor.js \
            --js=node_modules/google-closure-library/closure/goog/proto2/lazydeserializer.js \
            --js=node_modules/google-closure-library/closure/goog/proto2/message.js \
            --js=node_modules/google-closure-library/closure/goog/proto2/pbliteserializer.js \
            --js=node_modules/google-closure-library/closure/goog/proto2/serializer.js \
            --js=node_modules/google-closure-library/closure/goog/string/const.js \
            --js=node_modules/google-closure-library/closure/goog/string/internal.js \
            --js=node_modules/google-closure-library/closure/goog/string/string.js \
            --js=node_modules/google-closure-library/closure/goog/string/stringbuffer.js \
            --js=node_modules/google-closure-library/closure/goog/string/typedstring.js \
            --js=src/index.js \
            --js=src/metadata.js \
            --js=src/phonemetadata.pb.js \
            --js=src/phonenumber.pb.js \
            --js=src/phonenumberutil.js \
            --js=src/shortnumberinfo.js \
            --js=src/shortnumbermetadata.js \
            --js=src/asyoutypeformatter.js \
            --js_output_file=dist/libphonenumber.closure.js

          # Then use browserify to create the final bundle
          ./node_modules/.bin/browserify dist/libphonenumber.closure.js \
            -s libphonenumber \
            -o dist/libphonenumber.js

          # Clean up intermediate file
          rm dist/libphonenumber.closure.js
          cd ..

      - name: Copy build artifacts
        run: |
          mkdir -p src/libphonenumber-js/dist
          cp build-workspace/dist/libphonenumber.js src/libphonenumber-js/dist/
          cp build-workspace/src/metadata.js src/libphonenumber-js/
          mkdir -p src/libphonenumber-js/resources
          cp build-workspace/src/metadata.js src/libphonenumber-js/resources/

      - name: Determine next package version
        id: versioning
        run: |
          UPSTREAM_VERSION=$(echo "${{ steps.get_release.outputs.latest_tag }}" | sed 's/^v//')
          if [ -z "$UPSTREAM_VERSION" ]; then
            echo "Error: Could not determine upstream version"
            exit 1
          fi
          SUFFIX="aljosa"
          if [ -f MY_VERSION ]; then
            LAST_VERSION=$(cat MY_VERSION)
            LAST_UPSTREAM=$(echo "$LAST_VERSION" | sed 's/-'"$SUFFIX"'.*//')
            if [ "$LAST_UPSTREAM" = "$UPSTREAM_VERSION" ]; then
              LAST_SUFFIX=$(echo "$LAST_VERSION" | sed 's/.*-'"$SUFFIX"'.//')
              NEXT_SUFFIX=$((LAST_SUFFIX + 1))
            else
              NEXT_SUFFIX=1
            fi
          else
            NEXT_SUFFIX=1
          fi
          NEXT_VERSION="${UPSTREAM_VERSION}-${SUFFIX}.${NEXT_SUFFIX}"
          echo "$NEXT_VERSION" > MY_VERSION
          echo "next_version=$NEXT_VERSION" >> $GITHUB_OUTPUT

      - name: Validate version before publishing
        run: |
          VERSION="${{ steps.versioning.outputs.next_version }}"
          if [ -z "$VERSION" ]; then
            echo "Error: Version is empty"
            exit 1
          fi
          echo "Publishing version: $VERSION"
          if ! echo "$VERSION" | grep -E '^[0-9]+\.[0-9]+\.[0-9]+(-[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$' > /dev/null; then
            echo "Error: Invalid semver format: $VERSION"
            exit 1
          fi

      # - name: Generate TypeScript definitions
      #   run: |
      #     cd src/libphonenumber-js
      #     cat > index.d.ts << 'EOF'
      #     // ... (TypeScript definitions as in your original workflow)
      #     EOF

      - name: Generate package.json in generated directory
        run: |
          VERSION="${{ steps.versioning.outputs.next_version }}"
          if [ -z "$VERSION" ]; then
            echo "Error: Version is empty"
            exit 1
          fi
          cat > src/libphonenumber-js/package.json << EOF
          {
          "name": "@aljosap/libphonenumber-js",
            "version": "$VERSION",
            "description": "JavaScript build of Google's libphonenumber library",
            "main": "dist/libphonenumber.js",
            # "types": "index.d.ts",
            "files": [
              "dist/",
              # "*.d.ts",
              "resources/",
              "metadata.js"
            ],
            "repository": {
              "type": "git",
              "url": "https://github.com/aljosap/google-libphonenumber-js.git"
            },
            "keywords": [
              "libphonenumber",
              "phone",
              "validation",
              "google",
              "typescript"
            ],
            "author": "Aljosa Petkovic <aljosa3@gmail.com>",
            "license": "Apache-2.0",
            "homepage": "https://github.com/aljosap/google-libphonenumber-js#readme",
            "engines": {
              "node": ">=14.0.0"
            },
            "devDependencies": {
              "browserify": "^13.1.0",
              "eslint": "^7.13.0",
              "mocha": "^8.2.1",
              "should": "^11.1.0"
            }
          }
          EOF

      - name: Setup Node.js for npm publishing
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org/'

      - name: Publish to npm
        run: |
          cd src/libphonenumber-js
          echo "//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}" > .npmrc
          npm publish --access public
          rm -f .npmrc
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Commit and push changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: update libphonenumber to ${{ steps.get_release.outputs.latest_tag }} (version ${{ steps.versioning.outputs.next_version }})"
          branch: main
          file_pattern: 'src/libphonenumber-js/* LIBPHONENUMBER_VERSION MY_VERSION'
          push_options: '--force-with-lease'
          commit_user_name: github-actions[bot]
          commit_user_email: github-actions[bot]@users.noreply.github.com
